DROP TABLE IF EXISTS serving_cell_info;
CREATE TABLE serving_cell_info (
  _id integer PRIMARY KEY,		-- Transaction ID, incremental and unique in the db
  timestamp datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,		-- Timestamp
  mcc integer NOT NULL,			-- mobile country code
  mnc integer NOT NULL,			-- mobile network code
  network_type integer NOT NULL,	-- Network type as returned by http://developer.android.com/reference/android/telephony/TelephonyManager.html#getNetworkType%28%29
  lac integer NULL,			-- location area code of current serving cell
  cid integer NULL,			-- cell id of current serving cell
  psc integer NULL			-- primary scrambling code of current serving cell
);

DROP TABLE IF EXISTS neighboring_cell_info;
CREATE TABLE neighboring_cell_info(
  _id integer PRIMARY KEY,		-- Transaction ID, incremental and unique in the db
  timestamp datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,		-- Timestamp
  last_sc_id integer NOT NULL,		-- Reference to the last entry in serving_cell_info about the current serving cell
  mcc integer NOT NULL,			-- mobile country code
  mnc integer NOT NULL,			-- mobile network code
  lac integer NOT NULL,			-- location area code of this neighboring cell
  cid integer NOT NULL,			-- cell id of this neighboring cell
  psc integer NULL			-- primary scrambling code of this neighboring cell
);

DROP TABLE IF EXISTS location_info;
CREATE TABLE location_info(
  _id integer PRIMARY KEY,		-- Transaction ID, incremental and unique in the db
  timestamp datetime NOT NULL DEFAULT CURRENT_TIMESTAMP,		-- Timestamp
  accuracy DOUBLE NULL,			-- Accuracy in meters, from http://developer.android.com/reference/android/location/Location.html#getAccuracy(), may be NULL if hasAccuracy()==false
  latitude DOUBLE NOT NULL,		-- Latitude in degrees, from http://developer.android.com/reference/android/location/Location.html#getLatitude()
  longitude DOUBLE NOT NULL,		-- Longitude in degrees, from http://developer.android.com/reference/android/location/Location.html#getLongitude()
  altitude DOUBLE NULL,			-- Altitude in meters, from http://developer.android.com/reference/android/location/Location.html#getAltitude(), may be NULL if hasAltitude()==false
  provider_name char(32) DEFAULT NULL	-- Name of the provider which has generated the location, from http://developer.android.com/reference/android/location/Location.html#getProvider%28%29
);

DROP TABLE IF EXISTS pending_uploads;
CREATE TABLE pending_uploads(
  _id integer PRIMARY KEY,					-- Upload ID, incremental and unique in the db
  filename CHAR(64) NOT NULL UNIQUE, 		-- The filename of the file to upload, file must be located in context.getFilesDir()
  delete_after_uploading INTEGER NOT NULL 	-- 0/1, Indicates whether the file should be deleted directly after uploadingG
);

DROP TABLE IF EXISTS gsmmap_operators;
CREATE TABLE gsmmap_operators(
  id integer PRIMARY KEY,		-- Provider ID
  name char(32) DEFAULT NULL,		-- Provider name
  color char(9) DEFAULT NULL		-- HTML color used for provider
);

DROP TABLE IF EXISTS gsmmap_codes;
CREATE TABLE gsmmap_codes(
  id INTEGER UNSIGNED NOT NULL,		-- Provider ID
  mcc SMALLINT NOT NULL,		-- mobile country code
  mnc SMALLINT NOT NULL 		-- mobile network code
);

DROP TABLE IF EXISTS gsmmap_inter;
CREATE TABLE gsmmap_inter(
  id INTEGER UNSIGNED NOT NULL,		-- Provider ID
  year SMALLINT UNSIGNED NOT NULL,	-- Year
  month SMALLINT UNSIGNED NOT NULL,	-- Month
  value DOUBLE,				-- Intercept value
  size DOUBLE,				-- Size value
  PRIMARY KEY(id, year, month, value)
);

DROP TABLE IF EXISTS gsmmap_imper;
CREATE TABLE gsmmap_imper(
  id INTEGER UNSIGNED NOT NULL,		-- Provider ID
  year SMALLINT UNSIGNED NOT NULL,	-- Year
  month SMALLINT UNSIGNED NOT NULL,	-- Month
  value DOUBLE,				-- Impersonation value
  size DOUBLE,				-- Size value
  PRIMARY KEY(id, year, month, value)
);

DROP TABLE IF EXISTS gsmmap_track;
CREATE TABLE gsmmap_track(
  id INTEGER UNSIGNED NOT NULL,		-- Provider ID
  year SMALLINT UNSIGNED NOT NULL,	-- Year
  month SMALLINT UNSIGNED NOT NULL,	-- Month
  value DOUBLE,				-- Tracking value
  size DOUBLE,				-- Size value
  PRIMARY KEY(id, year, month, value)
);

DROP TABLE IF EXISTS gsmmap_inter3G;
CREATE TABLE gsmmap_inter3G(
  id INTEGER UNSIGNED NOT NULL,		-- Provider ID
  year SMALLINT UNSIGNED NOT NULL,	-- Year
  month SMALLINT UNSIGNED NOT NULL,	-- Month
  value DOUBLE,				-- Intercept value
  size DOUBLE,				-- Size value
  PRIMARY KEY(id, year, month, value)
);

DROP TABLE IF EXISTS gsmmap_imper3G;
CREATE TABLE gsmmap_imper3G(
  id INTEGER UNSIGNED NOT NULL,		-- Provider ID
  year SMALLINT UNSIGNED NOT NULL,	-- Year
  month SMALLINT UNSIGNED NOT NULL,	-- Month
  value DOUBLE,				-- Impersonation value
  size DOUBLE,				-- Size value
  PRIMARY KEY(id, year, month, value)
);
